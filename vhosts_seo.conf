#mongrel clusters
  upstream mongrel_seo {
#    fair;
    server 127.0.0.1:9880;
    server 127.0.0.1:9881;
    server 127.0.0.1:9882;
    server 127.0.0.1:9883;
  }

  server {
      listen 80;
      server_name .aqhwenquan.com
.bailuyuanhuaxue.com
.chimelongs.com
.chunvquan.com
.daowenquan.com
.dqwenquan.com
.fengyuzhuangyuanhuaxue.com
.grandchangan.com
.guanshanmuchang.com
.hhgpiaoliu.com
.hqwwenquan.com
.huashanyu.com
.jinsidaxiagu.com
.lgxpaoliu.com
.mhghuaxue.com
.nswenquan.com
.qlwenquan.com
.szhenrencs.com
.taibaishanpiaoliu.com
.tantwenquan.com
.tutucs.com
.tybishuiwan.com
.xadachangan.com
.xazhenrencs.com
.yhghuaxue.com
.ghjspiaoliu.com
.dfpiaoliu.com
.thpiaoliu.com
.d1piaoliu.com
.jsxpiaoliu.com
.djpiaoliu.com
.jwxpiaoliu.com
.blyhx.com
.blyhxc.com
      root /var/github/seo_site/public;

      # this rewrites all the requests to the maintenance.html
      # page if it exists in the doc root. This is for capistrano's
      # disable web task
      if (-f $document_root/system/maintenance.html) {
        rewrite  ^(.*)$  /system/maintenance.html last;
        break;
      }

      location / {
    
        #deny 220.181.19.161; # sogou
        #deny 61.135.219.12/13; # yodao
        #deny 61.135.220.21; # yodao-image
        #deny 61.135.166.232; # baidu
        #deny 124.115.0.0/24; # soso
        #deny 124.115.4.0/24; # soso
        #deny 66.249.65.0/24; # google

        # needed to forward user's IP address to rails
        proxy_set_header  X-Real-IP  $remote_addr;

        # needed for HTTPS
        proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
        proxy_redirect off;
        proxy_max_temp_file_size 0;
    
        # If the file exists as a static file serve it directly without
        # running all the other rewite tests on it
        if (-f $request_filename) { 
          break; 
        }

        # check for index.html for directory index
        # if its there on the filesystem then rewite 
        # the url to add /index.html to the end of it
        # and then break to send it to the next config rules.
        if (-f $request_filename/index.html) {
          rewrite (.*) $1/index.html break;
        }

        # this is the meat of the rails page caching config
        # it adds .html to the end of the url and then checks
        # the filesystem for that file. If it exists, then we
        # rewite the url to have explicit .html on the end 
        # and then send it on its way to the next config rule.
        # if there is no file on the fs then it sets all the 
        # necessary headers and proxies to our upstream mongrels
        if (-f $request_filename.html) {
          rewrite (.*) $1.html break;
        }

        if (!-f $request_filename) {
          # Use other cluster name here if you are running multiple
          # virtual hosts.
          proxy_pass http://mongrel_seo;
          break;
        }
      }

      error_page   500 502 503 504  /500.html;

      error_page 404 /404.html;

      location ~* ^.+\.(jpg|jpeg|gif|png|bmp|ico|css|js|swf|lrc)$ {
        access_log   off;
        expires      30d;
      }

      location ~* ^.+\.(mp3|wma|rar|zip|flv)$ {
        expires      30d;
      }

      location ~* ^.+\.(htm|html|xml)$ {
        expires      1h;
      }
  }
